1. Решение было выполнено торопясь, поэтому оно не доработано, и много багов не исправлено осознанно. 
 	а)Была создана структура классов, от абстрактного worker наследуются основные классы, которые служат
для взаимодействия с БД, от них наследются классы для рассчет заработной платы.
	б) В качестве GUI была выбрана платформа WPF. Структура отображения: 
Это однооконное приложение, после открытия которого отображаются данные внесенных в БД сотрудников,
при добавлении или редактировании информации открывается невидимая вкладка.
	в) Ключевые упрощения: Был создан super-user, который является собственным начальником (создание таких все-еще 
возможно), из-за этого его собственный функционал нарушен, при расчете его зп - приложение крашится.
	г) Нельзя удалить сотрудника, у которого есть подчиненные.
	д) При изменении должности сторудника, создается новый его экземпляр другого класса, старый удаляется. В связи с этим
нельзя изменить должность сотрудника, у которого остались подчиненные.
2. Покрытием unit-тестами я решил принебречь. 
3. Просмотром списка подчиненных я также принебрег, однако его сделать его нетрудно. У меня же есть счётчик 
прямых подчиненных (первого уровня), и у каждого сотрудника просматривается фамилия  прямого начальника. Логика расчета
заработной платы реализована как было указано в задании: у Manager-ов ЗП зависит только от подчиненных первого порядка, у 
Salesman-ов - от всех.